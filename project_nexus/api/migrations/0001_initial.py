# Generated by Django 5.2.6 on 2025-09-18 08:02

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.IntegerField(help_text='TMDB genre ID.', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the genre.', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Primary key: UUID for user.', primary_key=True, serialize=False)),
                ('email', models.EmailField(help_text='User email, used for authentication.', max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, help_text='User first name.', max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, help_text='User last name.', max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteMovie',
            fields=[
                ('id', models.AutoField(help_text='Internal auto-increment ID.', primary_key=True, serialize=False)),
                ('movie_id', models.IntegerField(help_text='TMDB movie ID.')),
                ('title', models.CharField(help_text='Movie title.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Movie description/overview.', null=True)),
                ('release_date', models.DateField(help_text='Date of movie release.')),
                ('poster_url', models.URLField(help_text='URL of the movie poster.')),
                ('date_favorited', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the movie was added to favorites.')),
                ('favorited_by', models.ForeignKey(help_text='User who favorited the movie.', on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('genres', models.ManyToManyField(blank=True, help_text='Genres associated with the movie.', to='api.genre')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, help_text='Profile picture (optional).', null=True, upload_to='profiles/')),
                ('description', models.TextField(blank=True, help_text='User bio or description.')),
                ('favorite_genres', models.ManyToManyField(blank=True, help_text='Preferred genres for recommendations.', to='api.genre')),
                ('user', models.OneToOneField(help_text='One-to-one link to User.', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
